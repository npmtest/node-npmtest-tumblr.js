{"/home/travis/build/npmtest/node-npmtest-tumblr.js/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-tumblr.js/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_tumblr_js */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-tumblr.js/lib.npmtest_tumblr.js.js":{"path":"/home/travis/build/npmtest/node-npmtest-tumblr.js/lib.npmtest_tumblr.js.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_tumblr_js */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_tumblr_js = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_tumblr_js = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-tumblr.js/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-tumblr.js/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-tumblr.js && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_tumblr_js */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_tumblr_js","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_tumblr_js.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_tumblr_js.rollup.js'] =","            local.assetsDict['/assets.npmtest_tumblr_js.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_tumblr_js.__dirname + '/lib.npmtest_tumblr_js.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-tumblr.js/node_modules/tumblr.js/lib/tumblr.js":{"path":"/home/travis/build/npmtest/node-npmtest-tumblr.js/node_modules/tumblr.js/lib/tumblr.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":1,"174":0,"175":1,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"forceFullBlogUrl","line":363,"loc":{"start":{"line":363,"column":0},"end":{"line":363,"column":35}}},"2":{"name":"createFunction","line":381,"loc":{"start":{"line":381,"column":0},"end":{"line":381,"column":40}}},"3":{"name":"promisifyRequest","line":402,"loc":{"start":{"line":402,"column":0},"end":{"line":402,"column":41}}},"4":{"name":"(anonymous_4)","line":403,"loc":{"start":{"line":403,"column":11},"end":{"line":403,"column":47}}},"5":{"name":"(anonymous_5)","line":404,"loc":{"start":{"line":404,"column":34},"end":{"line":404,"column":60}}},"6":{"name":"(anonymous_6)","line":405,"loc":{"start":{"line":405,"column":54},"end":{"line":405,"column":74}}},"7":{"name":"(anonymous_7)","line":416,"loc":{"start":{"line":416,"column":22},"end":{"line":416,"column":37}}},"8":{"name":"(anonymous_8)","line":419,"loc":{"start":{"line":419,"column":23},"end":{"line":419,"column":37}}},"9":{"name":"requestCallback","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":35}}},"10":{"name":"(anonymous_10)","line":442,"loc":{"start":{"line":442,"column":11},"end":{"line":442,"column":41}}},"11":{"name":"getRequest","line":475,"loc":{"start":{"line":475,"column":0},"end":{"line":475,"column":97}}},"12":{"name":"postRequest","line":504,"loc":{"start":{"line":504,"column":0},"end":{"line":504,"column":99}}},"13":{"name":"(anonymous_13)","line":511,"loc":{"start":{"line":511,"column":24},"end":{"line":511,"column":54}}},"14":{"name":"addMethod","line":554,"loc":{"start":{"line":554,"column":0},"end":{"line":554,"column":73}}},"15":{"name":"(anonymous_15)","line":558,"loc":{"start":{"line":558,"column":23},"end":{"line":558,"column":38}}},"16":{"name":"(anonymous_16)","line":560,"loc":{"start":{"line":560,"column":36},"end":{"line":560,"column":71}}},"17":{"name":"(anonymous_17)","line":577,"loc":{"start":{"line":577,"column":62},"end":{"line":577,"column":78}}},"18":{"name":"(anonymous_18)","line":581,"loc":{"start":{"line":581,"column":21},"end":{"line":581,"column":32}}},"19":{"name":"addMethods","line":625,"loc":{"start":{"line":625,"column":0},"end":{"line":625,"column":50}}},"20":{"name":"wrapCreatePost","line":652,"loc":{"start":{"line":652,"column":0},"end":{"line":652,"column":40}}},"21":{"name":"(anonymous_21)","line":653,"loc":{"start":{"line":653,"column":11},"end":{"line":653,"column":54}}},"22":{"name":"(anonymous_22)","line":657,"loc":{"start":{"line":657,"column":31},"end":{"line":657,"column":61}}},"23":{"name":"TumblrClient","line":696,"loc":{"start":{"line":696,"column":0},"end":{"line":696,"column":31}}},"24":{"name":"(anonymous_24)","line":879,"loc":{"start":{"line":879,"column":36},"end":{"line":879,"column":72}}},"25":{"name":"(anonymous_25)","line":896,"loc":{"start":{"line":896,"column":37},"end":{"line":896,"column":73}}},"26":{"name":"(anonymous_26)","line":908,"loc":{"start":{"line":908,"column":40},"end":{"line":908,"column":51}}},"27":{"name":"(anonymous_27)","line":918,"loc":{"start":{"line":918,"column":39},"end":{"line":918,"column":57}}},"28":{"name":"(anonymous_28)","line":927,"loc":{"start":{"line":927,"column":40},"end":{"line":927,"column":58}}},"29":{"name":"(anonymous_29)","line":965,"loc":{"start":{"line":965,"column":18},"end":{"line":965,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":44}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":40}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}},"16":{"start":{"line":29,"column":0},"end":{"line":29,"column":29}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":47}},"18":{"start":{"line":32,"column":0},"end":{"line":352,"column":2}},"19":{"start":{"line":363,"column":0},"end":{"line":368,"column":1}},"20":{"start":{"line":364,"column":4},"end":{"line":366,"column":5}},"21":{"start":{"line":365,"column":8},"end":{"line":365,"column":33}},"22":{"start":{"line":367,"column":4},"end":{"line":367,"column":19}},"23":{"start":{"line":381,"column":0},"end":{"line":390,"column":1}},"24":{"start":{"line":382,"column":4},"end":{"line":385,"column":5}},"25":{"start":{"line":383,"column":8},"end":{"line":383,"column":18}},"26":{"start":{"line":384,"column":8},"end":{"line":384,"column":18}},"27":{"start":{"line":387,"column":4},"end":{"line":389,"column":10}},"28":{"start":{"line":402,"column":0},"end":{"line":426,"column":1}},"29":{"start":{"line":403,"column":4},"end":{"line":425,"column":6}},"30":{"start":{"line":404,"column":8},"end":{"line":412,"column":22}},"31":{"start":{"line":405,"column":12},"end":{"line":411,"column":15}},"32":{"start":{"line":406,"column":16},"end":{"line":410,"column":17}},"33":{"start":{"line":407,"column":20},"end":{"line":407,"column":32}},"34":{"start":{"line":409,"column":20},"end":{"line":409,"column":34}},"35":{"start":{"line":414,"column":8},"end":{"line":422,"column":9}},"36":{"start":{"line":415,"column":12},"end":{"line":421,"column":19}},"37":{"start":{"line":417,"column":20},"end":{"line":417,"column":41}},"38":{"start":{"line":420,"column":20},"end":{"line":420,"column":40}},"39":{"start":{"line":424,"column":8},"end":{"line":424,"column":23}},"40":{"start":{"line":437,"column":0},"end":{"line":458,"column":1}},"41":{"start":{"line":438,"column":4},"end":{"line":440,"column":5}},"42":{"start":{"line":439,"column":8},"end":{"line":439,"column":25}},"43":{"start":{"line":442,"column":4},"end":{"line":457,"column":6}},"44":{"start":{"line":443,"column":8},"end":{"line":445,"column":9}},"45":{"start":{"line":444,"column":12},"end":{"line":444,"column":49}},"46":{"start":{"line":447,"column":8},"end":{"line":450,"column":9}},"47":{"start":{"line":448,"column":12},"end":{"line":448,"column":67}},"48":{"start":{"line":449,"column":12},"end":{"line":449,"column":110}},"49":{"start":{"line":452,"column":8},"end":{"line":456,"column":9}},"50":{"start":{"line":453,"column":12},"end":{"line":453,"column":59}},"51":{"start":{"line":455,"column":12},"end":{"line":455,"column":102}},"52":{"start":{"line":475,"column":0},"end":{"line":487,"column":1}},"53":{"start":{"line":476,"column":4},"end":{"line":476,"column":26}},"54":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"55":{"start":{"line":479,"column":8},"end":{"line":479,"column":50}},"56":{"start":{"line":482,"column":4},"end":{"line":486,"column":51}},"57":{"start":{"line":504,"column":0},"end":{"line":541,"column":1}},"58":{"start":{"line":505,"column":4},"end":{"line":505,"column":26}},"59":{"start":{"line":508,"column":4},"end":{"line":520,"column":7}},"60":{"start":{"line":512,"column":8},"end":{"line":518,"column":9}},"61":{"start":{"line":513,"column":12},"end":{"line":513,"column":36}},"62":{"start":{"line":515,"column":12},"end":{"line":517,"column":14}},"63":{"start":{"line":519,"column":8},"end":{"line":519,"column":55}},"64":{"start":{"line":523,"column":4},"end":{"line":523,"column":28}},"65":{"start":{"line":524,"column":4},"end":{"line":524,"column":48}},"66":{"start":{"line":525,"column":4},"end":{"line":525,"column":38}},"67":{"start":{"line":528,"column":4},"end":{"line":528,"column":50}},"68":{"start":{"line":529,"column":4},"end":{"line":529,"column":31}},"69":{"start":{"line":532,"column":4},"end":{"line":532,"column":37}},"70":{"start":{"line":533,"column":4},"end":{"line":535,"column":5}},"71":{"start":{"line":534,"column":8},"end":{"line":534,"column":38}},"72":{"start":{"line":538,"column":4},"end":{"line":538,"column":54}},"73":{"start":{"line":540,"column":4},"end":{"line":540,"column":26}},"74":{"start":{"line":554,"column":0},"end":{"line":613,"column":1}},"75":{"start":{"line":555,"column":4},"end":{"line":555,"column":42}},"76":{"start":{"line":556,"column":4},"end":{"line":556,"column":67}},"77":{"start":{"line":558,"column":4},"end":{"line":575,"column":6}},"78":{"start":{"line":559,"column":8},"end":{"line":559,"column":31}},"79":{"start":{"line":560,"column":8},"end":{"line":574,"column":15}},"80":{"start":{"line":562,"column":12},"end":{"line":567,"column":13}},"81":{"start":{"line":564,"column":16},"end":{"line":564,"column":72}},"82":{"start":{"line":565,"column":19},"end":{"line":567,"column":13}},"83":{"start":{"line":566,"column":16},"end":{"line":566,"column":54}},"84":{"start":{"line":569,"column":12},"end":{"line":573,"column":13}},"85":{"start":{"line":570,"column":16},"end":{"line":570,"column":52}},"86":{"start":{"line":572,"column":16},"end":{"line":572,"column":31}},"87":{"start":{"line":577,"column":4},"end":{"line":579,"column":48}},"88":{"start":{"line":578,"column":8},"end":{"line":578,"column":31}},"89":{"start":{"line":581,"column":4},"end":{"line":610,"column":6}},"90":{"start":{"line":582,"column":8},"end":{"line":582,"column":42}},"91":{"start":{"line":583,"column":8},"end":{"line":583,"column":41}},"92":{"start":{"line":584,"column":8},"end":{"line":586,"column":9}},"93":{"start":{"line":585,"column":12},"end":{"line":585,"column":35}},"94":{"start":{"line":588,"column":8},"end":{"line":588,"column":53}},"95":{"start":{"line":589,"column":8},"end":{"line":589,"column":72}},"96":{"start":{"line":590,"column":8},"end":{"line":590,"column":83}},"97":{"start":{"line":593,"column":8},"end":{"line":593,"column":77}},"98":{"start":{"line":596,"column":8},"end":{"line":596,"column":62}},"99":{"start":{"line":597,"column":8},"end":{"line":597,"column":79}},"100":{"start":{"line":600,"column":8},"end":{"line":600,"column":60}},"101":{"start":{"line":602,"column":8},"end":{"line":602,"column":34}},"102":{"start":{"line":603,"column":8},"end":{"line":607,"column":9}},"103":{"start":{"line":604,"column":12},"end":{"line":604,"column":100}},"104":{"start":{"line":605,"column":15},"end":{"line":607,"column":9}},"105":{"start":{"line":606,"column":12},"end":{"line":606,"column":40}},"106":{"start":{"line":609,"column":8},"end":{"line":609,"column":81}},"107":{"start":{"line":612,"column":4},"end":{"line":612,"column":81}},"108":{"start":{"line":625,"column":0},"end":{"line":640,"column":1}},"109":{"start":{"line":626,"column":4},"end":{"line":626,"column":28}},"110":{"start":{"line":627,"column":4},"end":{"line":639,"column":5}},"111":{"start":{"line":628,"column":8},"end":{"line":628,"column":38}},"112":{"start":{"line":629,"column":8},"end":{"line":637,"column":9}},"113":{"start":{"line":630,"column":12},"end":{"line":630,"column":28}},"114":{"start":{"line":631,"column":15},"end":{"line":637,"column":9}},"115":{"start":{"line":632,"column":12},"end":{"line":632,"column":50}},"116":{"start":{"line":633,"column":12},"end":{"line":633,"column":35}},"117":{"start":{"line":635,"column":12},"end":{"line":635,"column":42}},"118":{"start":{"line":636,"column":12},"end":{"line":636,"column":33}},"119":{"start":{"line":638,"column":8},"end":{"line":638,"column":81}},"120":{"start":{"line":652,"column":0},"end":{"line":684,"column":1}},"121":{"start":{"line":653,"column":4},"end":{"line":683,"column":6}},"122":{"start":{"line":654,"column":8},"end":{"line":654,"column":46}},"123":{"start":{"line":656,"column":8},"end":{"line":670,"column":9}},"124":{"start":{"line":657,"column":12},"end":{"line":669,"column":33}},"125":{"start":{"line":658,"column":16},"end":{"line":667,"column":17}},"126":{"start":{"line":659,"column":20},"end":{"line":659,"column":82}},"127":{"start":{"line":660,"column":20},"end":{"line":666,"column":21}},"128":{"start":{"line":661,"column":24},"end":{"line":661,"column":85}},"129":{"start":{"line":662,"column":27},"end":{"line":666,"column":21}},"130":{"start":{"line":663,"column":24},"end":{"line":663,"column":85}},"131":{"start":{"line":664,"column":27},"end":{"line":666,"column":21}},"132":{"start":{"line":665,"column":24},"end":{"line":665,"column":90}},"133":{"start":{"line":668,"column":16},"end":{"line":668,"column":28}},"134":{"start":{"line":672,"column":8},"end":{"line":676,"column":9}},"135":{"start":{"line":673,"column":12},"end":{"line":675,"column":13}},"136":{"start":{"line":674,"column":16},"end":{"line":674,"column":63}},"137":{"start":{"line":678,"column":8},"end":{"line":682,"column":9}},"138":{"start":{"line":679,"column":12},"end":{"line":679,"column":69}},"139":{"start":{"line":681,"column":12},"end":{"line":681,"column":59}},"140":{"start":{"line":696,"column":0},"end":{"line":868,"column":1}},"141":{"start":{"line":698,"column":4},"end":{"line":705,"column":5}},"142":{"start":{"line":699,"column":8},"end":{"line":704,"column":10}},"143":{"start":{"line":707,"column":4},"end":{"line":707,"column":28}},"144":{"start":{"line":709,"column":4},"end":{"line":709,"column":34}},"145":{"start":{"line":710,"column":4},"end":{"line":710,"column":88}},"146":{"start":{"line":711,"column":4},"end":{"line":711,"column":57}},"147":{"start":{"line":712,"column":4},"end":{"line":712,"column":52}},"148":{"start":{"line":713,"column":4},"end":{"line":718,"column":6}},"149":{"start":{"line":720,"column":4},"end":{"line":720,"column":40}},"150":{"start":{"line":721,"column":4},"end":{"line":721,"column":42}},"151":{"start":{"line":740,"column":4},"end":{"line":740,"column":59}},"152":{"start":{"line":761,"column":4},"end":{"line":761,"column":81}},"153":{"start":{"line":780,"column":4},"end":{"line":780,"column":62}},"154":{"start":{"line":803,"column":4},"end":{"line":803,"column":58}},"155":{"start":{"line":822,"column":4},"end":{"line":822,"column":67}},"156":{"start":{"line":842,"column":4},"end":{"line":842,"column":87}},"157":{"start":{"line":862,"column":4},"end":{"line":862,"column":80}},"158":{"start":{"line":865,"column":4},"end":{"line":867,"column":5}},"159":{"start":{"line":866,"column":8},"end":{"line":866,"column":30}},"160":{"start":{"line":879,"column":0},"end":{"line":885,"column":2}},"161":{"start":{"line":880,"column":4},"end":{"line":883,"column":5}},"162":{"start":{"line":881,"column":8},"end":{"line":881,"column":26}},"163":{"start":{"line":882,"column":8},"end":{"line":882,"column":20}},"164":{"start":{"line":884,"column":4},"end":{"line":884,"column":120}},"165":{"start":{"line":896,"column":0},"end":{"line":902,"column":2}},"166":{"start":{"line":897,"column":4},"end":{"line":900,"column":5}},"167":{"start":{"line":898,"column":8},"end":{"line":898,"column":26}},"168":{"start":{"line":899,"column":8},"end":{"line":899,"column":20}},"169":{"start":{"line":901,"column":4},"end":{"line":901,"column":122}},"170":{"start":{"line":908,"column":0},"end":{"line":911,"column":2}},"171":{"start":{"line":909,"column":4},"end":{"line":909,"column":56}},"172":{"start":{"line":910,"column":4},"end":{"line":910,"column":58}},"173":{"start":{"line":918,"column":0},"end":{"line":920,"column":2}},"174":{"start":{"line":919,"column":4},"end":{"line":919,"column":37}},"175":{"start":{"line":927,"column":0},"end":{"line":929,"column":2}},"176":{"start":{"line":928,"column":4},"end":{"line":928,"column":38}},"177":{"start":{"line":943,"column":0},"end":{"line":981,"column":2}},"178":{"start":{"line":967,"column":8},"end":{"line":974,"column":9}},"179":{"start":{"line":968,"column":12},"end":{"line":973,"column":14}},"180":{"start":{"line":977,"column":8},"end":{"line":977,"column":47}},"181":{"start":{"line":979,"column":8},"end":{"line":979,"column":22}}},"branchMap":{"1":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":4},"end":{"line":364,"column":4}},{"start":{"line":364,"column":4},"end":{"line":364,"column":4}}]},"2":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"3":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":16},"end":{"line":406,"column":16}},{"start":{"line":406,"column":16},"end":{"line":406,"column":16}}]},"4":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":8}},{"start":{"line":414,"column":8},"end":{"line":414,"column":8}}]},"5":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":4},"end":{"line":438,"column":4}},{"start":{"line":438,"column":4},"end":{"line":438,"column":4}}]},"6":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":8},"end":{"line":443,"column":8}},{"start":{"line":443,"column":8},"end":{"line":443,"column":8}}]},"7":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":8},"end":{"line":447,"column":8}},{"start":{"line":447,"column":8},"end":{"line":447,"column":8}}]},"8":{"line":448,"type":"cond-expr","locations":[{"start":{"line":448,"column":40},"end":{"line":448,"column":53}},{"start":{"line":448,"column":56},"end":{"line":448,"column":66}}]},"9":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":8},"end":{"line":452,"column":8}},{"start":{"line":452,"column":8},"end":{"line":452,"column":8}}]},"10":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":12},"end":{"line":452,"column":16}},{"start":{"line":452,"column":20},"end":{"line":452,"column":33}}]},"11":{"line":476,"type":"binary-expr","locations":[{"start":{"line":476,"column":13},"end":{"line":476,"column":19}},{"start":{"line":476,"column":23},"end":{"line":476,"column":25}}]},"12":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]},"13":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":13},"end":{"line":505,"column":19}},{"start":{"line":505,"column":23},"end":{"line":505,"column":25}}]},"14":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":12},"end":{"line":562,"column":12}},{"start":{"line":562,"column":12},"end":{"line":562,"column":12}}]},"15":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":19},"end":{"line":565,"column":19}},{"start":{"line":565,"column":19},"end":{"line":565,"column":19}}]},"16":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":12},"end":{"line":569,"column":12}},{"start":{"line":569,"column":12},"end":{"line":569,"column":12}}]},"17":{"line":577,"type":"binary-expr","locations":[{"start":{"line":577,"column":23},"end":{"line":577,"column":50}},{"start":{"line":577,"column":54},"end":{"line":577,"column":56}}]},"18":{"line":593,"type":"cond-expr","locations":[{"start":{"line":593,"column":59},"end":{"line":593,"column":69}},{"start":{"line":593,"column":72},"end":{"line":593,"column":76}}]},"19":{"line":597,"type":"cond-expr","locations":[{"start":{"line":597,"column":62},"end":{"line":597,"column":72}},{"start":{"line":597,"column":75},"end":{"line":597,"column":77}}]},"20":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":8},"end":{"line":603,"column":8}},{"start":{"line":603,"column":8},"end":{"line":603,"column":8}}]},"21":{"line":604,"type":"cond-expr","locations":[{"start":{"line":604,"column":61},"end":{"line":604,"column":79}},{"start":{"line":604,"column":82},"end":{"line":604,"column":99}}]},"22":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":15},"end":{"line":605,"column":15}},{"start":{"line":605,"column":15},"end":{"line":605,"column":15}}]},"23":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":8},"end":{"line":629,"column":8}},{"start":{"line":629,"column":8},"end":{"line":629,"column":8}}]},"24":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":15},"end":{"line":631,"column":15}},{"start":{"line":631,"column":15},"end":{"line":631,"column":15}}]},"25":{"line":632,"type":"binary-expr","locations":[{"start":{"line":632,"column":25},"end":{"line":632,"column":43}},{"start":{"line":632,"column":47},"end":{"line":632,"column":49}}]},"26":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":25},"end":{"line":635,"column":35}},{"start":{"line":635,"column":39},"end":{"line":635,"column":41}}]},"27":{"line":638,"type":"binary-expr","locations":[{"start":{"line":638,"column":59},"end":{"line":638,"column":70}},{"start":{"line":638,"column":74},"end":{"line":638,"column":79}}]},"28":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":8},"end":{"line":656,"column":8}},{"start":{"line":656,"column":8},"end":{"line":656,"column":8}}]},"29":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":16},"end":{"line":658,"column":16}},{"start":{"line":658,"column":16},"end":{"line":658,"column":16}}]},"30":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":20},"end":{"line":660,"column":20}},{"start":{"line":660,"column":20},"end":{"line":660,"column":20}}]},"31":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":24},"end":{"line":660,"column":48}},{"start":{"line":660,"column":52},"end":{"line":660,"column":75}}]},"32":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":27},"end":{"line":662,"column":27}},{"start":{"line":662,"column":27},"end":{"line":662,"column":27}}]},"33":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":27},"end":{"line":664,"column":27}},{"start":{"line":664,"column":27},"end":{"line":664,"column":27}}]},"34":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":8},"end":{"line":672,"column":8}},{"start":{"line":672,"column":8},"end":{"line":672,"column":8}}]},"35":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":12},"end":{"line":673,"column":12}},{"start":{"line":673,"column":12},"end":{"line":673,"column":12}}]},"36":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":8},"end":{"line":678,"column":8}},{"start":{"line":678,"column":8},"end":{"line":678,"column":8}}]},"37":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"38":{"line":707,"type":"binary-expr","locations":[{"start":{"line":707,"column":14},"end":{"line":707,"column":21}},{"start":{"line":707,"column":25},"end":{"line":707,"column":27}}]},"39":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":4},"end":{"line":865,"column":4}},{"start":{"line":865,"column":4},"end":{"line":865,"column":4}}]},"40":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":4},"end":{"line":880,"column":4}},{"start":{"line":880,"column":4},"end":{"line":880,"column":4}}]},"41":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":4},"end":{"line":897,"column":4}},{"start":{"line":897,"column":4},"end":{"line":897,"column":4}}]},"42":{"line":967,"type":"if","locations":[{"start":{"line":967,"column":8},"end":{"line":967,"column":8}},{"start":{"line":967,"column":8},"end":{"line":967,"column":8}}]}},"code":["/*!"," * https://www.npmjs.com/package/tumblr.js"," *"," * <3 always,"," *     Tumblr"," */","","/**"," * @namespace tumblr"," */","","var qs = require('query-string');","var request = require('request');","","var get = require('lodash/get');","var set = require('lodash/set');","var keys = require('lodash/keys');","var intersection = require('lodash/intersection');","var extend = require('lodash/extend');","var reduce = require('lodash/reduce');","var partial = require('lodash/partial');","var zipObject = require('lodash/zipObject');","var isString = require('lodash/isString');","var isFunction = require('lodash/isFunction');","var isArray = require('lodash/isArray');","var isPlainObject = require('lodash/isPlainObject');","var omit = require('lodash/omit');","","var CLIENT_VERSION = '1.0.0';","var API_BASE_URL = 'https://api.tumblr.com/v2';","","var API_METHODS = {","    GET: {","        /**","         * Gets information about a given blog","         *","         * @method blogInfo","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogInfo: '/blog/:blogIdentifier/info',","","        /**","         * Gets the avatar URL for a blog","         *","         * @method blogAvatar","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {number} [size] - avatar size, in pixels","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogAvatar: '/blog/:blogIdentifier/avatar/:size',","","        /**","         * Gets the likes for a blog","         *","         * @method blogLikes","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogLikes: '/blog/:blogIdentifier/likes',","","        /**","         * Gets the followers for a blog","         *","         * @method blogLikes","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogFollowers: '/blog/:blogIdentifier/followers',","","        /**","         * Gets a list of posts for a blog","         *","         * @method blogPosts","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {string} [type] - filters returned posts to the specified type","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @memberof TumblrClient","         */","        blogPosts: '/blog/:blogIdentifier/posts/:type',","","        /**","         * Gets the queue for a blog","         *","         * @method blogQueue","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogQueue: '/blog/:blogIdentifier/posts/queue',","","        /**","         * Gets the drafts for a blog","         *","         * @method blogDrafts","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} [params] - optional data sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogDrafts: '/blog/:blogIdentifier/posts/draft',","","        /**","         * Gets the submissions for a blog","         *","         * @method blogSubmissions","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} [params] - optional parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        blogSubmissions: '/blog/:blogIdentifier/posts/submission',","","        /**","         * Gets information about the authenticating user and their blogs","         *","         * @method userInfo","         *","         * @param  {Object} [params] - optional parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        userInfo: '/user/info',","","        /**","         * Gets the dashboard posts for the authenticating user","         *","         * @method userDashboard","         *","         * @param  {Object} [params] - optional parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        userDashboard: '/user/dashboard',","","        /**","         * Gets the blogs the authenticating user follows","         *","         * @method userFollowing","         *","         * @param  {Object} [params] - optional parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        userFollowing: '/user/following',","","        /**","         * Gets the likes for the authenticating user","         *","         * @method userLikes","         *","         * @param  {Object} [params] - optional parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        userLikes: '/user/likes',","","        /**","         * Gets posts tagged with the specified tag","         *","         * @method taggedPosts","         *","         * @param  {string} [tag] - tag to search for","         * @param  {Object} [params] - optional parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        taggedPosts: ['/tagged', ['tag']],","    },","","    POST: {","        /**","         * Creates a post on the given blog.","         * See the {@link https://www.tumblr.com/docs/api/v2#posting|API docs} for more information","         * about the parameters accepted.","         *","         * @method createPost","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} params - parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        createPost: '/blog/:blogIdentifier/post',","","        /**","         * Edits a given post","         *","         * @method editPost","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} params - parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        editPost: '/blog/:blogIdentifier/post/edit',","","        /**","         * Edits a given post","         *","         * @method reblogPost","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} params - parameters sent with the request","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        reblogPost: '/blog/:blogIdentifier/post/reblog',","","        /**","         * Edits a given post","         *","         * @method deletePost","         *","         * @param  {string} blogIdentifier - blog name or URL","         * @param  {Object} params - parameters sent with the request","         * @param  {Object} params.id - ID of the post to delete","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        deletePost: ['/blog/:blogIdentifier/post/delete', ['id']],","","        /**","         * Follows a blog as the authenticating user","         *","         * @method followBlog","         *","         * @param  {Object} params - parameters sent with the request","         * @param  {Object} params.url - URL of the blog to follow","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        followBlog: ['/user/follow', ['url']],","","        /**","         * Unfollows a blog as the authenticating user","         *","         * @method unfollowBlog","         *","         * @param  {Object} params - parameters sent with the request","         * @param  {Object} params.url - URL of the blog to unfollow","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        unfollowBlog: ['/user/unfollow', ['url']],","","        /**","         * Likes a post as the authenticating user","         *","         * @method likePost","         *","         * @param  {Object} params - parameters sent with the request","         * @param  {Object} params.id - ID of the post to like","         * @param  {Object} params.reblog_key - Reblog key for the post ID","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        likePost: ['/user/like', ['id', 'reblog_key']],","","        /**","         * Unlikes a post as the authenticating user","         *","         * @method unlikePost","         *","         * @param  {Object} params - parameters sent with the request","         * @param  {Object} params.id - ID of the post to unlike","         * @param  {Object} params.reblog_key - Reblog key for the post ID","         * @param  {TumblrClient~callback} [callback] - invoked when the request completes","         *","         * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","         *","         * @memberof TumblrClient","         */","        unlikePost: ['/user/unlike', ['id', 'reblog_key']],","    },","};","","/**"," * Turns a blog name to a full blog URL"," *"," * @param  {string} blogUrl - blog name or URL"," *"," * @return {string} full blog URL"," *"," * @private"," */","function forceFullBlogUrl(blogUrl) {","    if (blogUrl.indexOf('.') < 0) {","        blogUrl += '.tumblr.com';","    }","    return blogUrl;","}","","/**"," * Creates a named function with the desired signature"," *"," * @param  {string} name - function name"," * @param  {Array} [args] - array of argument names"," * @param  {Function} fn - function that contains the logic that should run"," *"," * @return {Function} a named function that takes the desired arguments"," *"," * @private"," */","function createFunction(name, args, fn) {","    if (isFunction(args)) {","        fn = args;","        args = [];","    }","","    return new Function('body',","        'return function ' + name + '(' + args.join(', ') + ') { return body.apply(this, arguments); };'","    )(fn);","}","","/**"," * Take a callback-based function and returns a Promise instead"," *"," * @param  {Function} requestMethod - callback-based method to promisify"," *"," * @return {Function} function that returns a Promise that resolves with the response body or"," *         rejects with the error message"," *"," * @private"," */","function promisifyRequest(requestMethod) {","    return function(apiPath, params, callback) {","        var promise = new Promise(function(resolve, reject) {","            requestMethod.call(this, apiPath, params, function(err, resp) {","                if (err) {","                    reject(err);","                } else {","                    resolve(resp);","                }","            });","        }.bind(this));","","        if (callback) {","            promise","                .then(function(body) {","                    callback(null, body);","                })","                .catch(function(err) {","                    callback(err, null);","                });","        }","","        return promise;","    };","}","","/**"," * Wraps a function for use as a request callback"," *"," * @param  {TumblrClient~callback} callback - function to wrap"," *"," * @return {TumblrClient~callback} request callback"," *"," * @private"," */","function requestCallback(callback) {","    if (!callback) {","        return undefined;","    }","","    return function(err, response, body) {","        if (err) {","            return callback(err, null, response);","        }","","        if (response.statusCode >= 400) {","            var errString = body.meta ? body.meta.msg : body.error;","            return callback(new Error('API error: ' + response.statusCode + ' ' + errString), null, response);","        }","","        if (body && body.response) {","            return callback(null, body.response, response);","        } else {","            return callback(new Error('API error (malformed API response): ' + body), null, response);","        }","    };","}","","/**"," * Make a get request"," *"," * @param  {Function} requestGet - function that performs a get request"," * @param  {Object} credentials - OAuth credentials"," * @param  {string} baseUrl - base URL for the request"," * @param  {string} apiPath - URL path for the request"," * @param  {Object} requestOptions - additional request options"," * @param  {Object} params - query parameters"," * @param  {TumblrClient~callback} callback - request callback"," *"," * @return {Request} Request object"," *"," * @private"," */","function getRequest(requestGet, credentials, baseUrl, apiPath, requestOptions, params, callback) {","    params = params || {};","","    if (credentials.consumer_key) {","        params.api_key = credentials.consumer_key;","    }","","    return requestGet(extend({","        url: baseUrl + apiPath + '?' + qs.stringify(params),","        oauth: credentials,","        json: true,","    }, requestOptions), requestCallback(callback));","}","","/**"," * Create a function to make POST requests to the Tumblr API"," *"," * @param  {Function} requestPost - function that performs a get request"," * @param  {Object} credentials - OAuth credentials"," * @param  {string} baseUrl - base URL for the request"," * @param  {string} apiPath - URL path for the request"," * @param  {Object} requestOptions - additional request options"," * @param  {Object} params - form data"," * @param  {TumblrClient~callback} callback - request callback"," *"," * @return {Request} Request object"," *"," * @private"," */","function postRequest(requestPost, credentials, baseUrl, apiPath, requestOptions, params, callback) {","    params = params || {};","","    // Sign without multipart data","    var currentRequest = requestPost(extend({","        url: baseUrl + apiPath,","        oauth: credentials,","    }, requestOptions), function(err, response, body) {","        try {","            body = JSON.parse(body);","        } catch (e) {","            body = {","                error: 'Malformed Response: ' + body,","            };","        }","        requestCallback(callback)(err, response, body);","    });","","    // Sign it with the non-data parameters","    var dataKeys = ['data'];","    currentRequest.form(omit(params, dataKeys));","    currentRequest.oauth(credentials);","","    // Clear the side effects from form(param)","    delete currentRequest.headers['content-type'];","    delete currentRequest.body;","","    // And then add the full body","    var form = currentRequest.form();","    for (var key in params) {","        form.append(key, params[key]);","    }","","    // Add the form header back","    extend(currentRequest.headers, form.getHeaders());","","    return currentRequest;","}","","/**"," * Adds a request method to the client"," *"," * @param  {Object} client - add the method to this object"," * @param  {string} methodName - the name of the method"," * @param  {string} apiPath - the API route, which uses any colon-prefixed segments as arguments"," * @param  {Array} paramNames - ordered list of required request parameters used as arguments"," * @param  {String|Function} requestType - the request type or a function that makes the request"," *"," * @private"," */","function addMethod(client, methodName, apiPath, paramNames, requestType) {","    var apiPathSplit = apiPath.split('/');","    var apiPathParamsCount = apiPath.split(/\\/:[^\\/]+/).length - 1;","","    var buildApiPath = function(args) {","        var pathParamIndex = 0;","        return reduce(apiPathSplit, function(apiPath, apiPathChunk, i) {","            // Parse arguments in the path","            if (apiPathChunk === ':blogIdentifier') {","                // Blog URLs are special","                apiPathChunk = forceFullBlogUrl(args[pathParamIndex++]);","            } else if (apiPathChunk[0] === ':') {","                apiPathChunk = args[pathParamIndex++];","            }","","            if (apiPathChunk) {","                return apiPath + '/' + apiPathChunk;","            } else {","                return apiPath;","            }","        }, '');","    };","","    var namedParams = (apiPath.match(/\\/:[^\\/]+/g) || []).map(function(param) {","        return param.substr(2);","    }).concat(paramNames, 'params', 'callback');","","    var methodBody = function() {","        var argsLength = arguments.length;","        var args = new Array(argsLength);","        for (var i = 0; i < argsLength; i++) {","            args[i] = arguments[i];","        }","","        var requiredParamsStart = apiPathParamsCount;","        var requiredParamsEnd = requiredParamsStart + paramNames.length;","        var requiredParamArgs = args.slice(requiredParamsStart, requiredParamsEnd);","","        // Callback is at the end","        var callback = isFunction(args[args.length - 1]) ? args.pop() : null;","","        // Required Parmas","        var params = zipObject(paramNames, requiredParamArgs);","        extend(params, isPlainObject(args[args.length - 1]) ? args.pop() : {});","","        // Path arguments are determined after required parameters","        var apiPathArgs = args.slice(0, apiPathParamsCount);","","        var request = requestType;","        if (isString(requestType)) {","            request = requestType.toUpperCase() === 'POST' ? client.postRequest : client.getRequest;","        } else if (!isFunction(requestType)) {","            request = client.getRequest;","        }","","        return request.call(client, buildApiPath(apiPathArgs), params, callback);","    };","","    set(client, methodName, createFunction(methodName, namedParams, methodBody));","}","","/**"," * Adds methods to the client"," *"," * @param  {TumblrClient} client - an instance of the `tumblr.js` API client"," * @param  {Object} methods - mapping of method names to endpoints. Endpoints can be a string or an"," *         array of format `[apiPathString, requireParamsArray]`"," * @param  {String|Function} requestType - the request type or a function that makes the request"," *"," * @private"," */","function addMethods(client, methods, requestType) {","    var apiPath, paramNames;","    for (var methodName in methods) {","        apiPath = methods[methodName];","        if (isString(apiPath)) {","            paramNames = [];","        } else if (isPlainObject(apiPath)) {","            paramNames = apiPath.paramNames || [];","            apiPath = apiPath.path;","        } else {","            paramNames = apiPath[1] || [];","            apiPath = apiPath[0];","        }","        addMethod(client, methodName, apiPath, paramNames, requestType || 'GET');","    }","}","","/**"," * Wraps createPost to specify `type` and validate the parameters"," *"," * @param  {string} type - post type"," * @param  {Function} [validate] - returns `true` if the parameters validate"," *"," * @return {Function} wrapped function"," *"," * @private"," */","function wrapCreatePost(type, validate) {","    return function(blogIdentifier, params, callback) {","        params = extend({type: type}, params);","","        if (isArray(validate)) {","            validate = partial(function(params, requireKeys) {","                if (requireKeys.length) {","                    var keyIntersection = intersection(keys(params), requireKeys);","                    if (requireKeys.length === 1 && !keyIntersection.length) {","                        throw new Error('Missing required field: ' + requireKeys[0]);","                    } else if (!keyIntersection.length) {","                        throw new Error('Missing one of: ' + requireKeys.join(', '));","                    } else if (keyIntersection.length > 1) {","                        throw new Error('Can only use one of: ' + requireKeys.join(', '));","                    }","                }","                return true;","            }, params, validate);","        }","","        if (isFunction(validate)) {","            if (!validate(params)) {","                throw new Error('Error validating parameters');","            }","        }","","        if (arguments.length > 2) {","            return this.createPost(blogIdentifier, params, callback);","        } else {","            return this.createPost(blogIdentifier, params);","        }","    };","}","","/**"," * Creates a Tumblr API client using the given options"," *"," * @param  {Object} [options] - client options"," * @param  {Object} [options.credentials] - OAuth credentials"," * @param  {string} [options.baseUrl] - API base URL"," * @param  {Object} [options.request] - library to use for making requests"," *"," * @constructor"," */","function TumblrClient(options) {","    // Support for `TumblrClient(credentials, baseUrl, requestLibrary)`","    if (arguments.length > 1) {","        options = {","            credentials: arguments[0],","            baseUrl: arguments[1],","            request: arguments[2],","            returnPromises: false,","        };","    }","","    options = options || {};","","    this.version = CLIENT_VERSION;","    this.credentials = get(options, 'credentials', omit(options, 'baseUrl', 'request'));","    this.baseUrl = get(options, 'baseUrl', API_BASE_URL);","    this.request = get(options, 'request', request);","    this.requestOptions = {","        followRedirect: false,","        headers: {","            'User-Agent': 'tumblr.js/' + CLIENT_VERSION,","        },","    };","","    this.addGetMethods(API_METHODS.GET);","    this.addPostMethods(API_METHODS.POST);","","    /**","     * Creates a text post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#ptext-posts|API docs}","     *","     * @method createTextPost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} [params.title] - post title text","     * @param  {string} params.body - post body text","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createTextPost = wrapCreatePost('text', ['body']);","","    /**","     * Creates a photo post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#pphoto-posts|API docs}","     *","     * @method createPhotoPost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} params.source - image source URL","     * @param  {Stream|Array} params.data - an image or array of images","     * @param  {string} params.data64 - base64-encoded image data","     * @param  {string} [params.caption] - post caption text","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createPhotoPost = wrapCreatePost('photo', ['data', 'data64', 'source']);","","    /**","     * Creates a quote post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#pquote-posts|API docs}","     *","     * @method createQuotePost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} params.quote - quote text","     * @param  {string} [params.source] - quote source","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createQuotePost = wrapCreatePost('quote', ['quote']);","","    /**","     * Creates a link post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#plink-posts|API docs}","     *","     * @method createLinkPost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} [params.title] - post title text","     * @param  {string} params.url - the link URL","     * @param  {string} [params.thumbnail] - the URL of an image to use as the thumbnail","     * @param  {string} [params.excerpt] - an excerpt from the page the link points to","     * @param  {string} [params.author] - the name of the author of the page the link points to","     * @param  {string} [params.description] - post caption text","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createLinkPost = wrapCreatePost('link', ['url']);","","    /**","     * Creates a chat post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#pchat-posts|API docs}","     *","     * @method createLinkPost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} [params.title] - post title text","     * @param  {string} params.conversation - chat text","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createChatPost = wrapCreatePost('chat', ['conversation']);","","    /**","     * Creates a photo post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#paudio-posts|API docs}","     *","     * @method createAudioPost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} params.external_url - image source URL","     * @param  {Stream} params.data - an audio file","     * @param  {string} [params.caption] - post caption text","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createAudioPost = wrapCreatePost('audio', ['data', 'data64', 'external_url']);","","    /**","     * Creates a photo post on the given blog","     *","     * @see {@link https://www.tumblr.com/docs/api/v2#pvideo-posts|API docs}","     *","     * @method createVideoPost","     *","     * @param  {string} blogIdentifier - blog name or URL","     * @param  {Object} params - parameters sent with the request","     * @param  {string} params.embed - embed code or a video URL","     * @param  {Stream} params.data - a video file","     * @param  {string} [params.caption] - post caption text","     * @param  {TumblrClient~callback} [callback] - invoked when the request completes","     *","     * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used","     *","     * @memberof TumblrClient","     */","    this.createVideoPost = wrapCreatePost('video', ['data', 'data64', 'embed']);","","    // Enable Promise mode","    if (get(options, 'returnPromises', false)) {","        this.returnPromises();","    }","}","","/**"," * Performs a GET request"," *"," * @param  {string} apiPath - URL path for the request"," * @param  {Object} params - query parameters"," * @param  {TumblrClient~callback} [callback] - request callback"," *"," * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used"," */","TumblrClient.prototype.getRequest = function(apiPath, params, callback) {","    if (isFunction(params)) {","        callback = params;","        params = {};","    }","    return getRequest(this.request.get, this.credentials, this.baseUrl, apiPath, this.requestOptions, params, callback);","};","","/**"," * Performs a POST request"," *"," * @param  {string} apiPath - URL path for the request"," * @param  {Object} params - form parameters"," * @param  {TumblrClient~callback} [callback] - request callback"," *"," * @return {Request|Promise} Request object, or Promise if {@link returnPromises} was used"," */","TumblrClient.prototype.postRequest = function(apiPath, params, callback) {","    if (isFunction(params)) {","        callback = params;","        params = {};","    }","    return postRequest(this.request.post, this.credentials, this.baseUrl, apiPath, this.requestOptions, params, callback);","};","","/**"," * Sets the client to return Promises instead of Request objects by patching the `getRequest` and"," * `postRequest` methods on the client"," */","TumblrClient.prototype.returnPromises = function() {","    this.getRequest = promisifyRequest(this.getRequest);","    this.postRequest = promisifyRequest(this.postRequest);","};","","/**"," * Adds GET methods to the client"," *"," * @param  {Object} methods - mapping of method names to endpoints"," */","TumblrClient.prototype.addGetMethods = function(methods) {","    addMethods(this, methods, 'GET');","};","","/**"," * Adds POST methods to the client"," *"," * @param  {Object} methods - mapping of method names to endpoints"," */","TumblrClient.prototype.addPostMethods = function(methods) {","    addMethods(this, methods, 'POST');","};","","/**"," * Handles the response from a client reuest"," *"," * @callback TumblrClient~callback"," * @param {?Error} err - error message"," * @param {?Object} resp - response body"," * @param {?string} [response] - raw response"," */","","/*"," * Please, enjoy our luxurious exports."," */","module.exports = {","    /**","     * Passthrough for the {@link TumblrClient} class","     *","     * @memberof tumblr","     * @see {@link TumblrClient}","     */","    Client: TumblrClient,","","    /**","     * Creates a Tumblr Client","     *","     * @param  {Object} [options] - client options","     * @param  {Object} [options.credentials] - OAuth credentials","     * @param  {string} [options.baseUrl] - API base URL","     * @param  {Object} [options.request] - library to use for making requests","     *","     * @return {TumblrClient} {@link TumblrClient} instance","     *","     * @memberof tumblr","     * @see {@link TumblrClient}","     */","    createClient: function(options) {","        // Support for `TumblrClient(credentials, baseUrl, requestLibrary)`","        if (arguments.length > 1) {","            options = {","                credentials: arguments[0],","                baseUrl: arguments[1],","                request: arguments[2],","                returnPromises: false,","            };","        }","","        // Create the Tumblr Client","        var client = new TumblrClient(options);","","        return client;","    },","};",""],"l":{"12":1,"13":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"29":1,"30":1,"32":1,"363":1,"364":0,"365":0,"367":0,"381":1,"382":0,"383":0,"384":0,"387":0,"402":1,"403":0,"404":0,"405":0,"406":0,"407":0,"409":0,"414":0,"415":0,"417":0,"420":0,"424":0,"437":1,"438":0,"439":0,"442":0,"443":0,"444":0,"447":0,"448":0,"449":0,"452":0,"453":0,"455":0,"475":1,"476":0,"478":0,"479":0,"482":0,"504":1,"505":0,"508":0,"512":0,"513":0,"515":0,"519":0,"523":0,"524":0,"525":0,"528":0,"529":0,"532":0,"533":0,"534":0,"538":0,"540":0,"554":1,"555":0,"556":0,"558":0,"559":0,"560":0,"562":0,"564":0,"565":0,"566":0,"569":0,"570":0,"572":0,"577":0,"578":0,"581":0,"582":0,"583":0,"584":0,"585":0,"588":0,"589":0,"590":0,"593":0,"596":0,"597":0,"600":0,"602":0,"603":0,"604":0,"605":0,"606":0,"609":0,"612":0,"625":1,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"635":0,"636":0,"638":0,"652":1,"653":0,"654":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"668":0,"672":0,"673":0,"674":0,"678":0,"679":0,"681":0,"696":1,"698":0,"699":0,"707":0,"709":0,"710":0,"711":0,"712":0,"713":0,"720":0,"721":0,"740":0,"761":0,"780":0,"803":0,"822":0,"842":0,"862":0,"865":0,"866":0,"879":1,"880":0,"881":0,"882":0,"884":0,"896":1,"897":0,"898":0,"899":0,"901":0,"908":1,"909":0,"910":0,"918":1,"919":0,"927":1,"928":0,"943":1,"967":0,"968":0,"977":0,"979":0}}}